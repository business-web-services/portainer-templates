services:
  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    image: ${POSTGRES_IMAGE}:${POSTGRES_TAG}
    volumes:
      - ${COMPOSE_PROJECT_NAME}-postgres-data:/var/lib/postgresql/data
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      SUPERUSER_USER: ${SUPERUSER_USER}
      SUPERUSER_PASS: ${SUPERUSER_PASS}
      DB_EXTENSION: ${DB_EXTENSION}
    restart: unless-stopped

  odoo:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    image: ${ODOO_IMAGE}:${ODOO_TAG}
    depends_on:
      - postgres
    hostname: ${COMPOSE_PROJECT_NAME}-app
    shm_size: ${SHM_SIZE}
    restart: unless-stopped
    tty: true
    volumes:
      - ${COMPOSE_PROJECT_NAME}-extra-addons:/mnt/extra-addons
      - ${COMPOSE_PROJECT_NAME}-backups:/mnt/backups
    command: -- --dev=reload
    environment:
      HOST: ${COMPOSE_PROJECT_NAME}-postgres
      USER: ${SUPERUSER_USER}
      PASSWORD: ${SUPERUSER_PASS}
    healthcheck:
      test: ["CMD-SHELL", "curl -X HEAD -I http://127.0.0.1:8069"]
      interval: 10s
      timeout: 10s
      retries: 10
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    labels:
      - "traefik.enable=true"
      # Redirecciona HTTP -> HTTPS
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${ODOO_URL}`) || Host(`www.${ODOO_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=${COMPOSE_PROJECT_NAME}-https-redirect"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https"
      # HTTPS (con SSL autom√°tico)
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${ODOO_URL}`) || Host(`www.${ODOO_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=le"
      # Servicio backend Odoo
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8069"

volumes:
  ${COMPOSE_PROJECT_NAME}-postgres-data:
  ${COMPOSE_PROJECT_NAME}-extra-addons:
  ${COMPOSE_PROJECT_NAME}-backups:

networks:
  default:
    name: ${NETWORK}
    external: true
